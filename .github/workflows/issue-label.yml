name: Auto Label Based on Text

on:
  issues:
    types: [opened]

jobs:
  label-issue:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Available Labels
        id: fetch_labels
        run: |
          curl -sSL -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            "https://api.github.com/repos/${{ github.repository }}/labels" \
            > labels.json

      - name: Check and Add Labels
        run: |
          issue_number=$(jq --raw-output .issue.number "$GITHUB_EVENT_PATH")
          issue_title=$(jq --raw-output .issue.title "$GITHUB_EVENT_PATH")
          issue_body=$(jq --raw-output .issue.body "$GITHUB_EVENT_PATH")

          # Convert issue content to lowercase for easier matching
          content=$(echo "$issue_title $issue_body" | tr '[:upper:]' '[:lower:]')

          # Initialize an empty array for labels to be added
          labels_to_add=()

          # Iterate over each label fetched from the repository
          jq -c '.[]' labels.json | while read label; do
            label_name=$(echo "$label" | jq --raw-output .name)
            label_keyword=$(echo "$label" | jq --raw-output .name | tr '[:upper:]' '[:lower:]')
            
            # Check if the label name or a keyword derived from it is present in the issue content
            if echo "$content" | grep -q "$label_keyword"; then
              labels_to_add+=("$label_name")
            fi
          done

          # If labels are found, add them to the issue
          if [ ${#labels_to_add[@]} -ne 0 ]; then
            labels_json=$(printf '%s\n' "${labels_to_add[@]}" | jq -R . | jq -s .)
            curl -sSL -X POST -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: application/json" \
              -d "{\"labels\":$labels_json}" \
              "https://api.github.com/repos/${{ github.repository }}/issues/$issue_number/labels"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
